syntax = "proto3";
package intergamm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "intergamm/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/osmosis-labs/osmosis/x/intergamm/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/intergamm/params";
  }
// Queries a list of ChannelAddress items.
	rpc ChannelAddress(QueryChannelAddressRequest) returns (QueryChannelAddressResponse) {
		option (google.api.http).get = "/intergamm/channel_address/{port}/{channel}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryChannelAddressRequest {
  string port = 1;
  string channel = 2;
}

message QueryChannelAddressResponse {
  string address = 1;
}

// this line is used by starport scaffolding # 3
